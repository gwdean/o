A nice thing about learning Lisp is that it
connects well with Object-Oriented Programming.

Two good ways to understand Object-Oriented Programming
is to delve into the Common Lisp Object System (CLOS),
and to create an Object Oriented Language of one's own.

The following document reviews several Object-Oriented
Systems in Lisp. They are listed in chronological order.

** 1989-Keene.
*** Developing a Simple CLOS Program: Locks.
(defclass lock ()
      ((name :initarg :name :reader lock-name))
  (:documentation "The foundation of all locks."))

(defclass null-lock (lock)
      ()
  (:documentation "A lock that is always free."))

(defclass simple-lock (lock)
      ((owner :initform nil :accessor lock-owner))
  (:documentation "A lock that is either free or busy."))

(setq *null-lock*
      (make-instance 'null-lock :name "Null lock"))

(setq *simple-lock*
      (make-instance 'simple-lock :name "Simple lock"))
** 1991-AMOP.
** 1994-Graham.
** 1996-Graham.
** 2009-Dybvig.