<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
               "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
lang="en" xml:lang="en">
<head>
<title>Roots.org</title>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
<meta name="generator" content="Org-mode"/>
<meta name="generated" content="2013-06-13 Thu"/>
<meta name="author" content="Greg"/>
<meta name="description" content="Notes on Paul Graham's "Roots of Lisp" (2002)"/>
<meta name="keywords" content=""/>
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  html { font-family: Times, serif; font-size: 12pt; }
  .title  { text-align: center; }
  .todo   { color: red; }
  .done   { color: green; }
  .tag    { background-color: #add8e6; font-weight:normal }
  .target { }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  p.verse { margin-left: 3% }
  pre {
	border: 1pt solid #AEBDCC;
	background-color: #F3F5F7;
	padding: 5pt;
	font-family: courier, monospace;
        font-size: 90%;
        overflow:auto;
  }
  table { border-collapse: collapse; }
  td, th { vertical-align: top; }
  dt { font-weight: bold; }
  div.figure { padding: 0.5em; }
  div.figure p { text-align: center; }
  .linenr { font-size:smaller }
  .code-highlighted {background-color:#ffff00;}
  .org-info-js_info-navigation { border-style:none; }
  #org-info-js_console-label { font-size:10px; font-weight:bold;
                               white-space:nowrap; }
  .org-info-js_search-highlight {background-color:#ffff00; color:#000000;
                                 font-weight:bold; }
  /*]]>*/-->
</style>
<script type="text/javascript">
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="content">

<h1 class="title">Roots.org</h1>


<p>
Notes on Paul Graham's "Roots of Lisp" (2002)
</p>

<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Aftermath </a></li>
<li><a href="#sec-2">2 Seven Primitive Operators </a></li>
<li><a href="#sec-3">3 Denoting Functions </a></li>
<li><a href="#sec-4">4 Some Functions </a></li>
<li><a href="#sec-5">5 The Surprise </a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Aftermath </h2>
<div class="outline-text-2" id="text-1">

<p>What we have here is a remarkably elegant model of computation. Using just <code>quote</code>, <code>atom</code>, <code>eq</code>, <code>car</code>, <code>cdr</code>, <code>cons</code>, and <code>cond</code> we can define a 
function, <code>eval.</code>, that actually implements our language, and then using
that we can define any additional function we want.
</p>
<p>
Steele and Sussman's "The Art of the Interpreter" (1978) shows how one
can add aditional features onto this core.
</p>
<p>
Lisp is one thing you get when you try to axiomatize computation.
</p>
</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Seven Primitive Operators </h2>
<div class="outline-text-2" id="text-2">

<p>(quote x)
(atom x)
(eq x y)
(car x)
(cdr x)
(cons x y)
</p>
</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Denoting Functions </h2>
<div class="outline-text-2" id="text-3">

<p>A function is expressed as:
</p>
<p>
(lambda (p1&hellip;pn) e)
</p>
<p>
((lambda (p1&hellip;pn) e) a1&hellip;an)
</p>
</div>

</div>

<div id="outline-container-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Some Functions </h2>
<div class="outline-text-2" id="text-4">

<p>Now that there is a way to express functions, we can
define some new ones in terms of our seven primitive operators.
</p>
<p>
Abbreviations
</p><ul>
<li>
(cxr e)
</li>
<li>
(list e1&hellip;en)

</li>
</ul>

<p>New Functions
</p><ul>
<li>
(defun null. (x)) 
</li>
<li>
(defun and. (x y)) 
</li>
<li>
(defun not. (x))
</li>
<li>
(defun append. (x y))
</li>
<li>
(defun pair. (x y))
</li>
<li>
(defun assoc. (x y))

</li>
</ul>
</div>

</div>

<div id="outline-container-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> The Surprise </h2>
<div class="outline-text-2" id="text-5">

<p>In addition to defining functions that concatenate lists, substitute
one expression for another, and so on, we can also define a function
that acts as an interpreter for our language.
</p>
<ul>
<li>
(defun eval. (e a))
</li>
<li>
(defun evcon. (c a))
</li>
<li>
(defun evlis. (m a))

</li>
</ul>

<p>The definition of <code>eval</code> is very long. Here is how it works.
</p>
<ul>
<li>
The function takes two arguments: (e a)
</li>
<li>
<i>e</i> is the expression to be evaluated
</li>
<li>
<i>a</i> is the environment
</li>
</ul>
</div>
</div>
<div id="postamble">
<p class="author"> Author: Greg
<a href="mailto:greg@greg-Satellite-C855D">&lt;greg@greg-Satellite-C855D&gt;</a>
</p>
<p class="date"> Date: 2013-06-13 Thu</p>
<p class="creator">HTML generated by org-mode 6.33x in emacs 23</p>
</div>
</div>
</body>
</html>
